# =============================================================================
# Navigation Configuration for OG Nav Package
# =============================================================================

og_nav:
  # OGM (Occupancy Grid Map) Configuration
  ogm:  
    resolution: 0.1                    # Map resolution in meters per pixel
    world_size: 30                     # World coordinate range in meters (from -world_size/2 to +world_size/2)
  
  # Path Planning Configuration  
  planning:
    # Path planning algorithm parameters will go here
    
  # Path Tracking Controller Configuration
  controller:
    lookahead_distance: 0.25           # Pure pursuit lookahead distance (m)
    cruise_speed: 0.5                 # Constant forward speed (m/s)
    max_angular_vel: 0.4              # Maximum angular velocity (rad/s)
    waypoint_threshold: 0.15           # Distance threshold for waypoint arrival (m)
    heading_threshold: 0.1            # Angle threshold for in-place rotation (rad)


  # Robot Configuration
  robot:
    # Robot reset pose (all joint positions)
    reset_pose: [
      # Base joints (6 DOF: x, y, z, rx, ry, rz)
      0, 0, 0, 0, 0, 0,
      # Trunk
      0,
      # Arms (7 DOF each, interleaved: left_1, right_1, head_1, left_2, right_2, head_2, left_3...)
      1.5, 1.5, 0, 1.5, 1.5, 0, 0.0, 0.0, 2.3, 2.3, 0, 0, -1.4, -1.4, 0, 0,
      # Grippers
      0.045, 0.045, 0.045, 0.045
    ]
    
    # Navigation arm pose for both arms [7 DOF each]
    nav_arm_pose: [1.5, 1.5, 0, 2.3, 0, -1.4, 0]

  # Visualization Configuration
  visualization:
    enable: true
    n_waypoints: 50                   # Number of waypoints for visualization
    
    # Marker positions and colors
    hidden_position: [0, 0, 100]       # Position to hide markers
    
    # Marker colors [R, G, B, A]
    start_marker_color: [0, 1, 0, 1]   # Green
    goal_marker_color: [1, 0, 0, 1]    # Red  
    waypoint_color: [0, 0, 1, 1]       # Blue
    
    # Marker sizes
    marker_radius: 0.1                 # Start/goal marker radius
    waypoint_radius: 0.05              # Waypoint marker radius
    marker_height: 0.1                 # Marker height above ground

# ===================== Compatible Full Scene Configuration =====================
scene:
  type: InteractiveTraversableScene
  scene_model: Pomaria_1_int
  load_object_categories: [floors, walls]
  # not_load_object_categories: [ceilings,roof]

  # default_erosion_radius: Config.DEFAULT_EROSION_RADIUS

# ## note for scene structure:  
  # 3. 结构类别特殊处理
  #   在 omnigibson/utils/constants.py 中定义了 STRUCTURE_CATEGORIES:
  #   STRUCTURE_CATEGORIES = frozenset({"floors", "walls", "ceilings", "lawn", "driveway", "fence", "roof", "background"})

  #   这些结构类别在白名单检查时被特殊处理 - 即使在任务相关模式下，它们也会被视为"任务相关"，确保场景的基本结构始终被加载。

  #   4. 实际使用示例

  #   # 只加载基本结构 (快速加载模式)
  #   scene:
  #     load_object_categories: [floors, walls, ceilings]
  #     not_load_object_categories: null

  #   # 排除某些类别
  #   scene:
  #     load_object_categories: null
  #     not_load_object_categories: [ceiling]  # 不加载天花板

  #   # 选择性加载
  #   scene:
  #     load_object_categories: [floors, walls, coffee_table, bed]
  #     not_load_object_categories: null

  #   5. 工作流程

  #   1. 场景加载时，读取 JSON 文件中的所有对象信息
  #   2. 对每个对象调用 _should_load_object 方法
  #   3. 根据对象的 category 属性判断：
  #     - 如果在黑名单中 → 不加载
  #     - 如果没有设置白名单 → 加载（除非在黑名单中）
  #     - 如果设置了白名单 → 只有在白名单中的才加载
  #     - 结构类别通常会被特殊对待，确保场景完整性

robots:
  - type: Tiago
    # position: [-10, 1.8, 0]
    reset_joint_pos: [
      # Base joints (6 DOF: x, y, z, rx, ry, rz)
      0, 0, 0, 0, 0, 0,
      # Trunk
      0,
      # Arms (7 DOF each, interleaved: left_1, right_1, head_1, left_2, right_2, head_2, left_3...)
      1.5, 1.5, 0, 1.5, 1.5, 0, 0.0, 0.0, 2.3, 2.3, 0, 0, -1.4, -1.4, 0, 0,
      # Grippers
      0.045, 0.045, 0.045, 0.045
    ]
    controller_config:
      arm_left:
        name: JointController
        motor_type: position
        use_delta_commands: false
        use_impedances: true
        command_input_limits: null
      arm_right:
        name: JointController
        motor_type: position
        use_delta_commands: false
        use_impedances: true
        command_input_limits: null
      camera:
        name: JointController
        motor_type: position
        use_delta_commands: false
        use_impedances: true
        command_input_limits: null